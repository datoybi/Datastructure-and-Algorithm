'''
크루스칼 알고리즘 (kruskal's algorithm)
    1. 모든 정점을 독립적인 집합으로 만든다.
    2. 모든 간선을 비용을 기준으로 정렬하고, 비용이 적은 간선부터 양 끝의 두 정점을 비교한다.
    3. 두 정점의 최상위 정점을 확인하고, 서로 다를 경우 두 정점을 연결한다 (최소신장트리는 사이클이 없으므로, 사이클이 생기지 않도록 하는 것임)
    (탐욕 알고리즘을 기초로 하고 있음 - 당장 눈 앞의 최소 비용을 선택해서, 결과적으로 최적의 솔루션을 찾음)

Union -Find 알고리즘
    Disjoint Set을 표현할 때 사용하는 알고리즘으로 트리 구조를 활용하는 앍리즘
    간단하게, 노드들 중에 연결된 노드를 찾거나, 노드들을 서로 연결할 때 사용 
    Disjoint Set이란
        서로 중복되지 않는 부분 집합들로 나눠진 원소들에 대한 정보를 저장하고 조직하는 자료구조
        공통 원소가 없는 (서로소) 상호 배타적인 부분 집합들로 나눠진 원소들에 대한 자료구조를 의미함
        Disjoint set - 서로소 집합 자료구조

        1. 초기화 : n개의 원소가 개별 집합으로 이뤄지도록 초기화
        2. Union : 두 개별 집합을 하나의 집합으로 합침, 두 트리를 하나의 트리로 만듦
        3. find : 여러 노드가 존재할 때, 두개의 노드를 선택해서, 현재 두 노드가 서로 같은 그래프에 속하는지 판별하기 위해, 각 구릅의 최상단 원소(즉, 루트노드)를 확인
'''