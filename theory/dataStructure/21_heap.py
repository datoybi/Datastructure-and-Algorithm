'''
    힙(Heap)
        데이터에서 최대값과 최소값을 빠르게 찾기 위해 고안된 완전 이진 트리(Complete Binaary Tree)
            완전 이진 트리: 노드를 삽입할 때 최하단 왼쪽 노드부터 차례대로 삽입하는 트리

        힙을 사용하는 이유 
            배열에 데이터를 넣고, 최대값과 최소값을 찾으려면 O(n)이 걸림 
            이에 반해, 힙에 데이터를 넣고, 최대값 최소값을 찾으면, O(logn)이 걸림
            우선순위 큐와 같이 최대값 또는 최소값을 빠르게 찾아야 하는 자료구조 및 알고리즘 구현 등에 활용됨


    힙의 구조
        힙은 최대값을 구하기 위한 구조(최대 힙 Max Heap), 최소값을 구하기 위한 구조(최소 힙, Min Heap)로 분류 가능
        힙은 다음과 같이 두 가지 조건을 가지고 있는 자료구조임 
            1. 각 노드의 값은 해당 노드의 자식 노드가 가진 값보다 크거나 같다. (최대 힘의 경우)
                최소 힙의 경우는 각 노드의 값은 해당 노드의 자식 노드가 가진 값보다 같거나 작음 
            2. 완전 이진 트리 형태를 가짐

    힙과 이진 탐색 트리의 공통점과 차이점 
        곹통점
            힙과 이진 탐색 트리는 모두 이진트리임
        차이점
            힙은 각 노드의 값이 자식노드보다 크거나 같음(Max Heap의 경우)
            이진 탐색 트리는 왼쪽 자식 노드의 값이 가장 작고, 그 다음 부모 노드, 그 다음 오른쪽 자식 노드 값이 가장 큼
            힙은 이진 탐색 트리의 조건인 자식 노드에서 작은값은 왼쪽, 큰 값은 오른쪽이라는 조건은 없음
                힙의 왼쪽 및 오른쪽 자식 노드의 값은 오른쪽이 클 수도 있고, 왼쪽이 클 수도 있음
            이진 탐색 트리는 탐색을 위한 구조, 힙은 최대/최소값 검색을 위한 구조 중 하나로 이해하면 됨
 
        힙의 데이터 삽입
             1. 완전 이진트리처럼 데이터 채우기
             2. 부모노드와 비교를 해서 부모노드보다 작을 떄 까지 바꿔주는 작업

        힙의 데이터 삭제 (Max Heap) - root 노드를 삭제한다
            보통 삭제는 최상단 노드 (root)를 삭제하는 것이 일반적임 
                힙의 용도는 최대값 또는 최소값을 root 노드에 놓아서, 최대값과 최소값을 바로 꺼내 쓸 수 있도록 하는 것임 
            상단의 데이터 삭제시, 최하단부 왼쪽에 위치한 노드 (일반적으로 가장 마지막에 추가한 노드)를 root 노드로 이동 
            root 노드의 값이 child node보다 작을 경우, root 노드의 child node중 가장 큰 값을 가진 노드와 root 노드 위치를 바꿔주는 작업을 반복함 (swap)

'''

